{"ast":null,"code":"import _objectSpread from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VBtnToggle.css\";\n\n// Components\nimport { makeVBtnGroupProps, VBtnGroup } from \"../VBtnGroup/VBtnGroup.mjs\"; // Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var VBtnToggleSymbol = Symbol[\"for\"]('vuetify:v-btn-toggle');\nexport var makeVBtnToggleProps = propsFactory(_objectSpread(_objectSpread({}, makeVBtnGroupProps()), makeGroupProps()), 'VBtnToggle');\nexport var VBtnToggle = genericComponent()({\n  name: 'VBtnToggle',\n  props: makeVBtnToggleProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useGroup = useGroup(props, VBtnToggleSymbol),\n      isSelected = _useGroup.isSelected,\n      next = _useGroup.next,\n      prev = _useGroup.prev,\n      select = _useGroup.select,\n      selected = _useGroup.selected;\n    useRender(function () {\n      var btnGroupProps = VBtnGroup.filterProps(props);\n      return _createVNode(VBtnGroup, _mergeProps({\n        \"class\": ['v-btn-toggle', props[\"class\"]]\n      }, btnGroupProps, {\n        \"style\": props.style\n      }), {\n        \"default\": function _default() {\n          var _slots$default;\n          return [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n            isSelected: isSelected,\n            next: next,\n            prev: prev,\n            select: select,\n            selected: selected\n          })];\n        }\n      });\n    });\n    return {\n      next: next,\n      prev: prev,\n      select: select\n    };\n  }\n});","map":{"version":3,"names":["makeVBtnGroupProps","VBtnGroup","makeGroupProps","useGroup","genericComponent","propsFactory","useRender","VBtnToggleSymbol","Symbol","makeVBtnToggleProps","_objectSpread","VBtnToggle","name","props","emits","updateModelValue","value","setup","_ref","slots","_useGroup","isSelected","next","prev","select","selected","btnGroupProps","filterProps","_createVNode","_mergeProps","style","default","_slots$default","call"],"sources":["../../../src/components/VBtnToggle/VBtnToggle.tsx"],"sourcesContent":["// Styles\nimport './VBtnToggle.sass'\n\n// Components\nimport { makeVBtnGroupProps, VBtnGroup } from '@/components/VBtnGroup/VBtnGroup'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport type BtnToggleSlotProps = 'isSelected' | 'select' | 'selected' | 'next' | 'prev'\nexport interface DefaultBtnToggleSlot extends Pick<GroupProvide, BtnToggleSlotProps> {}\n\nexport const VBtnToggleSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-btn-toggle')\n\ntype VBtnToggleSlots = {\n  default: DefaultBtnToggleSlot\n}\n\nexport const makeVBtnToggleProps = propsFactory({\n  ...makeVBtnGroupProps(),\n  ...makeGroupProps(),\n}, 'VBtnToggle')\n\nexport const VBtnToggle = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VBtnToggleSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBtnToggle',\n\n  props: makeVBtnToggleProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, next, prev, select, selected } = useGroup(props, VBtnToggleSymbol)\n\n    useRender(() => {\n      const btnGroupProps = VBtnGroup.filterProps(props)\n\n      return (\n        <VBtnGroup\n          class={[\n            'v-btn-toggle',\n            props.class,\n          ]}\n          { ...btnGroupProps }\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            next,\n            prev,\n            select,\n            selected,\n          })}\n        </VBtnGroup>\n      )\n    })\n\n    return {\n      next,\n      prev,\n      select,\n    }\n  },\n})\n\nexport type VBtnToggle = InstanceType<typeof VBtnToggle>\n"],"mappings":";;AAAA;AACA;;AAEA;AAAA,SACSA,kBAAkB,EAAEC,SAAS,sCAEtC;AAAA,SACSC,cAAc,EAAEC,QAAQ,uCAEjC;AAAA,SACSC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,gCAElD;AAQA,OAAO,IAAMC,gBAA4C,GAAGC,MAAM,OAAI,CAAC,sBAAsB,CAAC;AAM9F,OAAO,IAAMC,mBAAmB,GAAGJ,YAAY,CAAAK,aAAA,CAAAA,aAAA,KAC1CV,kBAAkB,CAAC,CAAC,GACpBE,cAAc,CAAC,IACjB,YAAY,CAAC;AAEhB,OAAO,IAAMS,UAAU,GAAGP,gBAAgB,CAMK,CAAC,CAAC;EAC/CQ,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAEJ,mBAAmB,CAAC,CAAC;EAE5BK,KAAK,EAAE;IACL,mBAAmB,EAAG,SAAtBC,gBAAmBA,CAAGC,KAAU;MAAA,OAAK;IAAA;EACvC,CAAC;EAEDC,KAAK,WAALA,KAAKA,CAAEJ,KAAK,EAAAK,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAAC,SAAA,GAAqDjB,QAAQ,CAACU,KAAK,EAAEN,gBAAgB,CAAC;MAA9Ec,UAAU,GAAAD,SAAA,CAAVC,UAAU;MAAEC,IAAI,GAAAF,SAAA,CAAJE,IAAI;MAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;MAAEC,MAAM,GAAAJ,SAAA,CAANI,MAAM;MAAEC,QAAA,GAAAL,SAAA,CAAAK,QAAA;IAExCnB,SAAS,CAAC,YAAM;MACd,IAAMoB,aAAa,GAAGzB,SAAS,CAAC0B,WAAW,CAACd,KAAK,CAAC;MAElD,OAAAe,YAAA,CAAA3B,SAAA,EAAA4B,WAAA;QAAA,SAEW,CACL,cAAc,EACdhB,KAAK,SAAM;MACZ,GACIa,aAAa;QAAA,SACVb,KAAK,CAACiB;MAAK;QAAA,oBAAAC,SAAA;UAAA,IAAAC,cAAA;UAAA,SAAAA,cAAA,GAEjBb,KAAK,WAAQ,cAAAa,cAAA,uBAAbA,cAAA,CAAAC,IAAA,CAAAd,KAAK,EAAW;YAChBE,UAAU,EAAVA,UAAU;YACVC,IAAI,EAAJA,IAAI;YACJC,IAAI,EAAJA,IAAI;YACJC,MAAM,EAANA,MAAM;YACNC,QAAA,EAAAA;UACF,CAAC,CAAC;QAAA;MAAA;IAGR,CAAC,CAAC;IAEF,OAAO;MACLH,IAAI,EAAJA,IAAI;MACJC,IAAI,EAAJA,IAAI;MACJC,MAAA,EAAAA;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}