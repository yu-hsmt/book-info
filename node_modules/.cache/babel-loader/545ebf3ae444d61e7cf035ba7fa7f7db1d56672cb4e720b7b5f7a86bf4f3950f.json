{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\n// Utilities\nimport { isOn } from \"./helpers.mjs\";\nexport function getPrefixedEventHandlers(attrs, suffix, getData) {\n  return Object.keys(attrs).filter(function (key) {\n    return isOn(key) && key.endsWith(suffix);\n  }).reduce(function (acc, key) {\n    acc[key.slice(0, -suffix.length)] = function (event) {\n      return attrs[key](event, getData(event));\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["isOn","getPrefixedEventHandlers","attrs","suffix","getData","Object","keys","filter","key","endsWith","reduce","acc","slice","length","event"],"sources":["../../src/util/events.ts"],"sourcesContent":["// Utilities\nimport { isOn } from '@/util/helpers'\n\ntype EventHandler = (event: Event) => any\n\nexport function getPrefixedEventHandlers<T extends `:${string}`> (\n  attrs: Record<string, any>,\n  suffix: T,\n  getData: EventHandler\n): Record<`${string}${T}`, EventHandler> {\n  return Object.keys(attrs)\n    .filter(key => isOn(key) && key.endsWith(suffix))\n    .reduce((acc: any, key) => {\n      acc[key.slice(0, -suffix.length)] = (event: Event) => attrs[key](event, getData(event))\n      return acc\n    }, {} as Record<`${string}${T}`, EventHandler>)\n}\n"],"mappings":";;;;;;AAAA;AAAA,SACSA,IAAI;AAIb,OAAO,SAASC,wBAAwBA,CACtCC,KAA0B,EAC1BC,MAAS,EACTC,OAAqB,EACkB;EACvC,OAAOC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CACtBK,MAAM,CAAC,UAAAC,GAAG;IAAA,OAAIR,IAAI,CAACQ,GAAG,CAAC,IAAIA,GAAG,CAACC,QAAQ,CAACN,MAAM,CAAC;EAAA,EAAC,CAChDO,MAAM,CAAC,UAACC,GAAQ,EAAEH,GAAG,EAAK;IACzBG,GAAG,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAACT,MAAM,CAACU,MAAM,CAAC,CAAC,GAAI,UAAAC,KAAY;MAAA,OAAKZ,KAAK,CAACM,GAAG,CAAC,CAACM,KAAK,EAAEV,OAAO,CAACU,KAAK,CAAC,CAAC;IAAA;IACvF,OAAOH,GAAG;EACZ,CAAC,EAAE,CAAC,CAA0C,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}