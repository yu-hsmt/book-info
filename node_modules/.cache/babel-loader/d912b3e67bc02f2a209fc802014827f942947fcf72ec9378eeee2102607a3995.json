{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'BookSearch',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var query = ref('');\n    var store = useStore();\n    var books = computed(function () {\n      return store.state.books;\n    }); //storeのstateの「books」の値をbooksとする\n    var error = computed(function () {\n      return store.state.error;\n    }); //storeのstateの「error」の値をerrorとする\n\n    var searchBooks = function searchBooks() {\n      //以下を「searchBooks」とする\n      if (query.value.trim() !== '') {\n        //queryが空でなければ\n        store.dispatch('fetchBooks', query.value); //storeの「fetchBooks」にqueryのvalueをいれて実行\n      }\n    };\n    var __returned__ = {\n      query: query,\n      store: store,\n      books: books,\n      error: error,\n      searchBooks: searchBooks,\n      ref: ref,\n      computed: computed,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","query","store","books","state","error","searchBooks","value","trim","dispatch"],"sources":["/Users/yu/vue-book-info-app____/src/components/BookSearch.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-text-field\n      v-model=\"query\"\n      label=\"Search for books\"\n      @keyup.enter=\"searchBooks\"\n      class=\"mb-4\"\n    ></v-text-field>\n    <v-btn @click=\"searchBooks\">Search</v-btn>\n\n    <v-alert type=\"error\" v-if=\"error\">{{ error }}</v-alert>\n    <v-row v-if=\"books.length\">\n      <v-col\n      v-for=\"book in books\"\n      :key=\"book.id\"\n      cols=\"12\"\n      sm=\"6\"\n      md=\"4\"\n      lg=\"3\"\n      >\n      <v-card class=\"mx-auto\" max-width=\"400\">\n        <v-card-title>{{ book.volumeInfo.title }}</v-card-title>\n        <v-card-subtitle>{{ book.volumeInfo.authors?.join(', ') }}</v-card-subtitle> <!--「?」ってなに？ -->\n        <v-card-text>\n          <div>{{ book.volumeInfo.publishedDate }}</div>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn :href=\"book.volumeInfo.previewLink\" target=\"_blank\">Preview</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\n\nconst query = ref('');\nconst store = useStore();\n\nconst books = computed(() => store.state.books); //storeのstateの「books」の値をbooksとする\nconst error = computed(() => store.state.error); //storeのstateの「error」の値をerrorとする\n\nconst searchBooks = () => { //以下を「searchBooks」とする\n  if(query.value.trim() !== '') { //queryが空でなければ\n    store.dispatch('fetchBooks', query.value); //storeの「fetchBooks」にqueryのvalueをいれて実行\n  }\n}\n</script>"],"mappings":";;AAoCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;;;;;;IAE/B,IAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMI,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAExB,IAAMG,KAAK,GAAGJ,QAAQ,CAAC;MAAA,OAAMG,KAAK,CAACE,KAAK,CAACD,KAAK;IAAA,EAAC,CAAC,CAAC;IACjD,IAAME,KAAK,GAAGN,QAAQ,CAAC;MAAA,OAAMG,KAAK,CAACE,KAAK,CAACC,KAAK;IAAA,EAAC,CAAC,CAAC;;IAEjD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;MAAE;MAC1B,IAAGL,KAAK,CAACM,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAAE;QAC9BN,KAAK,CAACO,QAAQ,CAAC,YAAY,EAAER,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC;MAC7C;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}