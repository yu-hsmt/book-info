{"ast":null,"code":"import _objectSpread from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VProgressCircular.css\";\n\n// Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVProgressCircularProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String],\n  modelValue: {\n    type: [Number, String],\n    \"default\": 0\n  },\n  rotate: {\n    type: [Number, String],\n    \"default\": 0\n  },\n  width: {\n    type: [Number, String],\n    \"default\": 4\n  }\n}, makeComponentProps()), makeSizeProps()), makeTagProps({\n  tag: 'div'\n})), makeThemeProps()), 'VProgressCircular');\nexport var VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n  props: makeVProgressCircularProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var MAGIC_RADIUS_CONSTANT = 20;\n    var CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;\n    var root = ref();\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var _useSize = useSize(props),\n      sizeClasses = _useSize.sizeClasses,\n      sizeStyles = _useSize.sizeStyles;\n    var _useTextColor = useTextColor(toRef(props, 'color')),\n      textColorClasses = _useTextColor.textColorClasses,\n      textColorStyles = _useTextColor.textColorStyles;\n    var _useTextColor2 = useTextColor(toRef(props, 'bgColor')),\n      underlayColorClasses = _useTextColor2.textColorClasses,\n      underlayColorStyles = _useTextColor2.textColorStyles;\n    var _useIntersectionObser = useIntersectionObserver(),\n      intersectionRef = _useIntersectionObser.intersectionRef,\n      isIntersecting = _useIntersectionObser.isIntersecting;\n    var _useResizeObserver = useResizeObserver(),\n      resizeRef = _useResizeObserver.resizeRef,\n      contentRect = _useResizeObserver.contentRect;\n    var normalizedValue = computed(function () {\n      return Math.max(0, Math.min(100, parseFloat(props.modelValue)));\n    });\n    var width = computed(function () {\n      return Number(props.width);\n    });\n    var size = computed(function () {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);\n    });\n    var diameter = computed(function () {\n      return MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2;\n    });\n    var strokeWidth = computed(function () {\n      return width.value / size.value * diameter.value;\n    });\n    var strokeDashOffset = computed(function () {\n      return convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE);\n    });\n    watchEffect(function () {\n      intersectionRef.value = root.value;\n      resizeRef.value = root.value;\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"ref\": root,\n        \"class\": ['v-progress-circular', {\n          'v-progress-circular--indeterminate': !!props.indeterminate,\n          'v-progress-circular--visible': isIntersecting.value,\n          'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink'\n        }, themeClasses.value, sizeClasses.value, textColorClasses.value, props[\"class\"]],\n        \"style\": [sizeStyles.value, textColorStyles.value, props.style],\n        \"role\": \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value\n      }, {\n        \"default\": function _default() {\n          return [_createVNode(\"svg\", {\n            \"style\": {\n              transform: \"rotate(calc(-90deg + \".concat(Number(props.rotate), \"deg))\")\n            },\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"viewBox\": \"0 0 \".concat(diameter.value, \" \").concat(diameter.value)\n          }, [_createVNode(\"circle\", {\n            \"class\": ['v-progress-circular__underlay', underlayColorClasses.value],\n            \"style\": underlayColorStyles.value,\n            \"fill\": \"transparent\",\n            \"cx\": \"50%\",\n            \"cy\": \"50%\",\n            \"r\": MAGIC_RADIUS_CONSTANT,\n            \"stroke-width\": strokeWidth.value,\n            \"stroke-dasharray\": CIRCUMFERENCE,\n            \"stroke-dashoffset\": 0\n          }, null), _createVNode(\"circle\", {\n            \"class\": \"v-progress-circular__overlay\",\n            \"fill\": \"transparent\",\n            \"cx\": \"50%\",\n            \"cy\": \"50%\",\n            \"r\": MAGIC_RADIUS_CONSTANT,\n            \"stroke-width\": strokeWidth.value,\n            \"stroke-dasharray\": CIRCUMFERENCE,\n            \"stroke-dashoffset\": strokeDashOffset.value\n          }, null)]), slots[\"default\"] && _createVNode(\"div\", {\n            \"class\": \"v-progress-circular__content\"\n          }, [slots[\"default\"]({\n            value: normalizedValue.value\n          })])];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["useTextColor","makeComponentProps","useIntersectionObserver","useResizeObserver","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","computed","ref","toRef","watchEffect","convertToUnit","genericComponent","propsFactory","useRender","makeVProgressCircularProps","_objectSpread","bgColor","String","color","indeterminate","Boolean","modelValue","type","Number","rotate","width","tag","VProgressCircular","name","props","setup","_ref","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","PI","root","_provideTheme","themeClasses","_useSize","sizeClasses","sizeStyles","_useTextColor","textColorClasses","textColorStyles","_useTextColor2","underlayColorClasses","underlayColorStyles","_useIntersectionObser","intersectionRef","isIntersecting","_useResizeObserver","resizeRef","contentRect","normalizedValue","max","min","parseFloat","size","value","diameter","strokeWidth","strokeDashOffset","_createVNode","style","undefined","default","transform","concat"],"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVProgressCircularProps = propsFactory({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0,\n  },\n  width: {\n    type: [Number, String],\n    default: 4,\n  },\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'div' }),\n  ...makeThemeProps(),\n}, 'VProgressCircular')\n\ntype VProgressCircularSlots = {\n  default: { value: number }\n}\n\nexport const VProgressCircular = genericComponent<VProgressCircularSlots>()({\n  name: 'VProgressCircular',\n\n  props: makeVProgressCircularProps(),\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const root = ref<HTMLElement>()\n\n    const { themeClasses } = provideTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value\n        ? Number(props.size)\n        : contentRect.value\n          ? contentRect.value.width\n          : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    watchEffect(() => {\n      intersectionRef.value = root.value\n      resizeRef.value = root.value\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ root }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressCircular = InstanceType<typeof VProgressCircular>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}