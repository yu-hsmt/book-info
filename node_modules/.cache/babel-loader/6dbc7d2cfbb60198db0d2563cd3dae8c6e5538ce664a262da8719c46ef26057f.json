{"ast":null,"code":"import _slicedToArray from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _wrapRegExp from \"/Users/yu/vue-book-info-app____/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// Utilities\nimport { APCAcontrast } from \"./color/APCA.mjs\";\nimport { consoleWarn } from \"./console.mjs\";\nimport { chunk, has, padEnd } from \"./helpers.mjs\";\nimport * as CIELAB from \"./color/transformCIELAB.mjs\";\nimport * as sRGB from \"./color/transformSRGB.mjs\"; // Types\nexport function isCssColor(color) {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color);\n}\nexport function isParsableColor(color) {\n  return isCssColor(color) && !/^((rgb|hsl)a?\\()?var\\(--/.test(color);\n}\nvar cssColorRe = /*#__PURE__*/_wrapRegExp(/^((?:rgb|hsl)a?)\\((.+)\\)/, {\n  fn: 1,\n  values: 2\n});\nvar mappers = {\n  rgb: function rgb(r, g, b, a) {\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  },\n  rgba: function rgba(r, g, b, a) {\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  },\n  hsl: function hsl(h, s, l, a) {\n    return HSLtoRGB({\n      h: h,\n      s: s,\n      l: l,\n      a: a\n    });\n  },\n  hsla: function hsla(h, s, l, a) {\n    return HSLtoRGB({\n      h: h,\n      s: s,\n      l: l,\n      a: a\n    });\n  },\n  hsv: function hsv(h, s, v, a) {\n    return HSVtoRGB({\n      h: h,\n      s: s,\n      v: v,\n      a: a\n    });\n  },\n  hsva: function hsva(h, s, v, a) {\n    return HSVtoRGB({\n      h: h,\n      s: s,\n      v: v,\n      a: a\n    });\n  }\n};\nexport function parseColor(color) {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) {\n      // int can't have opacity\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex color\"));\n    }\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: color & 0xFF\n    };\n  } else if (typeof color === 'string' && cssColorRe.test(color)) {\n    var _color$match = color.match(cssColorRe),\n      groups = _color$match.groups;\n    var fn = groups.fn,\n      values = groups.values;\n    var realValues = values.split(/,\\s*/).map(function (v) {\n      if (v.endsWith('%') && ['hsl', 'hsla', 'hsv', 'hsva'].includes(fn)) {\n        return parseFloat(v) / 100;\n      } else {\n        return parseFloat(v);\n      }\n    });\n    return mappers[fn].apply(mappers, _toConsumableArray(realValues));\n  } else if (typeof color === 'string') {\n    var hex = color.startsWith('#') ? color.slice(1) : color;\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(function (_char) {\n        return _char + _char;\n      }).join('');\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex(a) color\"));\n    }\n    var _int = parseInt(hex, 16);\n    if (isNaN(_int) || _int < 0 || _int > 0xFFFFFFFF) {\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex(a) color\"));\n    }\n    return HexToRGB(hex);\n  } else if (_typeof(color) === 'object') {\n    if (has(color, ['r', 'g', 'b'])) {\n      return color;\n    } else if (has(color, ['h', 's', 'l'])) {\n      return HSVtoRGB(HSLtoHSV(color));\n    } else if (has(color, ['h', 's', 'v'])) {\n      return HSVtoRGB(color);\n    }\n  }\n  throw new TypeError(\"Invalid color: \".concat(color == null ? color : String(color) || color.constructor.name, \"\\nExpected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number\"));\n}\nexport function RGBToInt(color) {\n  return (color.r << 16) + (color.g << 8) + color.b;\n}\nexport function classToHex(color, colors, currentTheme) {\n  var _color$toString$trim$ = color.toString().trim().replace('-', '').split(' ', 2),\n    _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n    colorName = _color$toString$trim$2[0],\n    colorModifier = _color$toString$trim$2[1];\n  var hexColor = '';\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier];\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base;\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName];\n  }\n  return hexColor;\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB(hsva) {\n  var h = hsva.h,\n    s = hsva.s,\n    v = hsva.v,\n    a = hsva.a;\n  var f = function f(n) {\n    var k = (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  var rgb = [f(5), f(3), f(1)].map(function (v) {\n    return Math.round(v * 255);\n  });\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n    a: a\n  };\n}\nexport function HSLtoRGB(hsla) {\n  return HSVtoRGB(HSLtoHSV(hsla));\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV(rgba) {\n  if (!rgba) return {\n    h: 0,\n    s: 1,\n    v: 1,\n    a: 1\n  };\n  var r = rgba.r / 255;\n  var g = rgba.g / 255;\n  var b = rgba.b / 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = 0;\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + (g - b) / (max - min));\n    } else if (max === g) {\n      h = 60 * (2 + (b - r) / (max - min));\n    } else if (max === b) {\n      h = 60 * (4 + (r - g) / (max - min));\n    }\n  }\n  if (h < 0) h = h + 360;\n  var s = max === 0 ? 0 : (max - min) / max;\n  var hsv = [h, s, max];\n  return {\n    h: hsv[0],\n    s: hsv[1],\n    v: hsv[2],\n    a: rgba.a\n  };\n}\nexport function HSVtoHSL(hsva) {\n  var h = hsva.h,\n    s = hsva.s,\n    v = hsva.v,\n    a = hsva.a;\n  var l = v - v * s / 2;\n  var sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l);\n  return {\n    h: h,\n    s: sprime,\n    l: l,\n    a: a\n  };\n}\nexport function HSLtoHSV(hsl) {\n  var h = hsl.h,\n    s = hsl.s,\n    l = hsl.l,\n    a = hsl.a;\n  var v = l + s * Math.min(l, 1 - l);\n  var sprime = v === 0 ? 0 : 2 - 2 * l / v;\n  return {\n    h: h,\n    s: sprime,\n    v: v,\n    a: a\n  };\n}\nexport function RGBtoCSS(_ref) {\n  var r = _ref.r,\n    g = _ref.g,\n    b = _ref.b,\n    a = _ref.a;\n  return a === undefined ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n}\nexport function HSVtoCSS(hsva) {\n  return RGBtoCSS(HSVtoRGB(hsva));\n}\nfunction toHex(v) {\n  var h = Math.round(v).toString(16);\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase();\n}\nexport function RGBtoHex(_ref2) {\n  var r = _ref2.r,\n    g = _ref2.g,\n    b = _ref2.b,\n    a = _ref2.a;\n  return \"#\".concat([toHex(r), toHex(g), toHex(b), a !== undefined ? toHex(Math.round(a * 255)) : ''].join(''));\n}\nexport function HexToRGB(hex) {\n  hex = parseHex(hex);\n  var _chunk$map = chunk(hex, 2).map(function (c) {\n      return parseInt(c, 16);\n    }),\n    _chunk$map2 = _slicedToArray(_chunk$map, 4),\n    r = _chunk$map2[0],\n    g = _chunk$map2[1],\n    b = _chunk$map2[2],\n    a = _chunk$map2[3];\n  a = a === undefined ? a : a / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nexport function HexToHSV(hex) {\n  var rgb = HexToRGB(hex);\n  return RGBtoHSV(rgb);\n}\nexport function HSVtoHex(hsva) {\n  return RGBtoHex(HSVtoRGB(hsva));\n}\nexport function parseHex(hex) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n  hex = hex.replace(/([^0-9a-f])/gi, 'F');\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(function (x) {\n      return x + x;\n    }).join('');\n  }\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F');\n  }\n  return hex;\n}\nexport function parseGradient(gradient, colors, currentTheme) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, function (x) {\n    return classToHex(x, colors, currentTheme) || x;\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, function (x) {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',');\n  });\n}\nexport function lighten(value, amount) {\n  var lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  var lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma(color) {\n  var rgb = parseColor(color);\n  return sRGB.toXYZ(rgb)[1];\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast(first, second) {\n  var l1 = getLuma(first);\n  var l2 = getLuma(second);\n  var light = Math.max(l1, l2);\n  var dark = Math.min(l1, l2);\n  return (light + 0.05) / (dark + 0.05);\n}\nexport function getForeground(color) {\n  var blackContrast = Math.abs(APCAcontrast(parseColor(0), parseColor(color)));\n  var whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), parseColor(color)));\n\n  // TODO: warn about poor color selections\n  // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n  // const minContrast = Math.max(blackContrast, whiteContrast)\n  // if (minContrast < 60) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n  // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n  // }\n\n  // Prefer white text if both have an acceptable contrast ratio\n  return whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000';\n}","map":{"version":3,"names":["APCAcontrast","consoleWarn","chunk","has","padEnd","CIELAB","sRGB","isCssColor","color","test","isParsableColor","cssColorRe","_wrapRegExp","fn","values","mappers","rgb","r","g","b","a","rgba","hsl","h","s","l","HSLtoRGB","hsla","hsv","v","HSVtoRGB","hsva","parseColor","isNaN","concat","_color$match","match","groups","realValues","split","map","endsWith","includes","parseFloat","apply","_toConsumableArray","hex","startsWith","slice","length","char","join","int","parseInt","HexToRGB","_typeof","HSLtoHSV","TypeError","String","constructor","name","RGBToInt","classToHex","colors","currentTheme","_color$toString$trim$","toString","trim","replace","_color$toString$trim$2","_slicedToArray","colorName","colorModifier","hexColor","base","f","n","k","Math","max","min","round","RGBtoHSV","HSVtoHSL","sprime","RGBtoCSS","_ref","undefined","HSVtoCSS","toHex","substr","toUpperCase","RGBtoHex","_ref2","parseHex","_chunk$map","c","_chunk$map2","HexToHSV","HSVtoHex","x","parseGradient","gradient","Object","lighten","value","amount","lab","fromXYZ","toXYZ","darken","getLuma","getContrast","first","second","l1","l2","light","dark","getForeground","blackContrast","abs","whiteContrast"],"sources":["../../src/util/colorUtils.ts"],"sourcesContent":["// Utilities\nimport { APCAcontrast } from './color/APCA'\nimport { consoleWarn } from './console'\nimport { chunk, has, padEnd } from './helpers'\nimport * as CIELAB from '@/util/color/transformCIELAB'\nimport * as sRGB from '@/util/color/transformSRGB'\n\n// Types\nimport type { Colors } from '@/composables/theme'\n\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number, a?: number }\nexport type RGB = { r: number, g: number, b: number, a?: number }\nexport type HSL = { h: number, s: number, l: number, a?: number }\nexport type Hex = string & { __hexBrand: never }\nexport type Color = string | number | HSV | RGB | HSL\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function isParsableColor (color: string): boolean {\n  return isCssColor(color) && !/^((rgb|hsl)a?\\()?var\\(--/.test(color)\n}\n\nconst cssColorRe = /^(?<fn>(?:rgb|hsl)a?)\\((?<values>.+)\\)/\nconst mappers = {\n  rgb: (r: number, g: number, b: number, a?: number) => ({ r, g, b, a }),\n  rgba: (r: number, g: number, b: number, a?: number) => ({ r, g, b, a }),\n  hsl: (h: number, s: number, l: number, a?: number) => HSLtoRGB({ h, s, l, a }),\n  hsla: (h: number, s: number, l: number, a?: number) => HSLtoRGB({ h, s, l, a }),\n  hsv: (h: number, s: number, v: number, a?: number) => HSVtoRGB({ h, s, v, a }),\n  hsva: (h: number, s: number, v: number, a?: number) => HSVtoRGB({ h, s, v, a }),\n}\n\nexport function parseColor (color: Color): RGB {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) { // int can't have opacity\n      consoleWarn(`'${color}' is not a valid hex color`)\n    }\n\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: (color & 0xFF),\n    }\n  } else if (typeof color === 'string' && cssColorRe.test(color)) {\n    const { groups } = color.match(cssColorRe)!\n    const { fn, values } = groups as { fn: keyof typeof mappers, values: string }\n    const realValues = values.split(/,\\s*/)\n      .map(v => {\n        if (v.endsWith('%') && ['hsl', 'hsla', 'hsv', 'hsva'].includes(fn)) {\n          return parseFloat(v) / 100\n        } else {\n          return parseFloat(v)\n        }\n      }) as [number, number, number, number?]\n\n    return mappers[fn](...realValues)\n  } else if (typeof color === 'string') {\n    let hex = color.startsWith('#') ? color.slice(1) : color\n\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(char => char + char).join('')\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    const int = parseInt(hex, 16)\n    if (isNaN(int) || int < 0 || int > 0xFFFFFFFF) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    return HexToRGB(hex as Hex)\n  } else if (typeof color === 'object') {\n    if (has(color, ['r', 'g', 'b'])) {\n      return color\n    } else if (has(color, ['h', 's', 'l'])) {\n      return HSVtoRGB(HSLtoHSV(color))\n    } else if (has(color, ['h', 's', 'v'])) {\n      return HSVtoRGB(color)\n    }\n  }\n\n  throw new TypeError(`Invalid color: ${color == null ? color : (String(color) || (color as any).constructor.name)}\\nExpected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number`)\n}\n\nexport function RGBToInt (color: RGB) {\n  return (color.r << 16) + (color.g << 8) + color.b\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB (hsva: HSV): RGB {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\nexport function HSLtoRGB (hsla: HSL): RGB {\n  return HSVtoRGB(HSLtoHSV(hsla))\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV (rgba: RGB): HSV {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVtoHSL (hsva: HSV): HSL {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLtoHSV (hsl: HSL): HSV {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBtoCSS ({ r, g, b, a }: RGB): string {\n  return a === undefined ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${a})`\n}\n\nexport function HSVtoCSS (hsva: HSV): string {\n  return RGBtoCSS(HSVtoRGB(hsva))\n}\n\nfunction toHex (v: number) {\n  const h = Math.round(v).toString(16)\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n}\n\nexport function RGBtoHex ({ r, g, b, a }: RGB): Hex {\n  return `#${[\n    toHex(r),\n    toHex(g),\n    toHex(b),\n    a !== undefined ? toHex(Math.round(a * 255)) : '',\n  ].join('')}` as Hex\n}\n\nexport function HexToRGB (hex: Hex): RGB {\n  hex = parseHex(hex)\n  let [r, g, b, a] = chunk(hex, 2).map((c: string) => parseInt(c, 16))\n  a = a === undefined ? a : (a / 255)\n\n  return { r, g, b, a }\n}\n\nexport function HexToHSV (hex: Hex): HSV {\n  const rgb = HexToRGB(hex)\n  return RGBtoHSV(rgb)\n}\n\nexport function HSVtoHex (hsva: HSV): Hex {\n  return RGBtoHex(HSVtoRGB(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return hex as Hex\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function lighten (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = parseColor(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n\nexport function getForeground (color: Color) {\n  const blackContrast = Math.abs(APCAcontrast(parseColor(0), parseColor(color)))\n  const whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), parseColor(color)))\n\n  // TODO: warn about poor color selections\n  // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n  // const minContrast = Math.max(blackContrast, whiteContrast)\n  // if (minContrast < 60) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n  // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n  // }\n\n  // Prefer white text if both have an acceptable contrast ratio\n  return whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000'\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,SACSA,YAAY;AAAA,SACZC,WAAW;AAAA,SACXC,KAAK,EAAEC,GAAG,EAAEC,MAAM;AAAA,OACpB,KAAKC,MAAM;AAAA,OACX,KAAKC,IAAI,mCAEhB;AAWA,OAAO,SAASC,UAAUA,CAAEC,KAA6B,EAAW;EAClE,OAAO,CAAC,CAACA,KAAK,IAAI,4BAA4B,CAACC,IAAI,CAACD,KAAK,CAAC;AAC5D;AAEA,OAAO,SAASE,eAAeA,CAAEF,KAAa,EAAW;EACvD,OAAOD,UAAU,CAACC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAACC,IAAI,CAACD,KAAK,CAAC;AACrE;AAEA,IAAMG,UAAU,gBAAAC,WAAA,CAAG,0BAAwC;EAAAC,EAAA;EAAAC,MAAA;AAAA;AAC3D,IAAMC,OAAO,GAAG;EACdC,GAAG,EAAE,SAALA,GAAGA,CAAGC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEC,CAAU;IAAA,OAAM;MAAEH,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAA,EAAAA;IAAE,CAAC;EAAA,CAAC;EACtEC,IAAI,EAAE,SAANA,IAAIA,CAAGJ,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEC,CAAU;IAAA,OAAM;MAAEH,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAA,EAAAA;IAAE,CAAC;EAAA,CAAC;EACvEE,GAAG,EAAE,SAALA,GAAGA,CAAGC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEL,CAAU;IAAA,OAAKM,QAAQ,CAAC;MAAEH,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEL,CAAA,EAAAA;IAAE,CAAC,CAAC;EAAA;EAC9EO,IAAI,EAAE,SAANA,IAAIA,CAAGJ,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEL,CAAU;IAAA,OAAKM,QAAQ,CAAC;MAAEH,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEL,CAAA,EAAAA;IAAE,CAAC,CAAC;EAAA;EAC/EQ,GAAG,EAAE,SAALA,GAAGA,CAAGL,CAAS,EAAEC,CAAS,EAAEK,CAAS,EAAET,CAAU;IAAA,OAAKU,QAAQ,CAAC;MAAEP,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEK,CAAC,EAADA,CAAC;MAAET,CAAA,EAAAA;IAAE,CAAC,CAAC;EAAA;EAC9EW,IAAI,EAAE,SAANA,IAAIA,CAAGR,CAAS,EAAEC,CAAS,EAAEK,CAAS,EAAET,CAAU;IAAA,OAAKU,QAAQ,CAAC;MAAEP,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEK,CAAC,EAADA,CAAC;MAAET,CAAA,EAAAA;IAAE,CAAC;EAAA;AAChF,CAAC;AAED,OAAO,SAASY,UAAUA,CAAExB,KAAY,EAAO;EAC7C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAIyB,KAAK,CAACzB,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,QAAQ,EAAE;MAAE;MACnDP,WAAW,KAAAiC,MAAA,CAAK1B,KAAK,+BAA4B,CAAC;IACpD;IAEA,OAAO;MACLS,CAAC,EAAE,CAACT,KAAK,GAAG,QAAQ,KAAK,EAAE;MAC3BU,CAAC,EAAE,CAACV,KAAK,GAAG,MAAM,KAAK,CAAC;MACxBW,CAAC,EAAGX,KAAK,GAAG;IACd,CAAC;EACH,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIG,UAAU,CAACF,IAAI,CAACD,KAAK,CAAC,EAAE;IAC9D,IAAA2B,YAAA,GAAmB3B,KAAK,CAAC4B,KAAK,CAACzB,UAAU,CAAE;MAAnC0B,MAAA,GAAAF,YAAA,CAAAE,MAAA;IACR,IAAQxB,EAAE,GAAawB,MAAsD,CAArExB,EAAE;MAAEC,MAAA,GAAWuB,MAAsD,CAAjEvB,MAAA;IACZ,IAAMwB,UAAU,GAAGxB,MAAM,CAACyB,KAAK,CAAC,MAAM,CAAC,CACpCC,GAAG,CAAC,UAAAX,CAAC,EAAI;MACR,IAAIA,CAAC,CAACY,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAACC,QAAQ,CAAC7B,EAAE,CAAC,EAAE;QAClE,OAAO8B,UAAU,CAACd,CAAC,CAAC,GAAG,GAAG;MAC5B,CAAC,MAAM;QACL,OAAOc,UAAU,CAACd,CAAC,CAAC;MACtB;IACF,CAAC,CAAsC;IAEzC,OAAOd,OAAO,CAACF,EAAE,CAAC,CAAA+B,KAAA,CAAX7B,OAAO,EAAA8B,kBAAA,CAAQP,UAAU,EAAC;EACnC,CAAC,MAAM,IAAI,OAAO9B,KAAK,KAAK,QAAQ,EAAE;IACpC,IAAIsC,GAAG,GAAGtC,KAAK,CAACuC,UAAU,CAAC,GAAG,CAAC,GAAGvC,KAAK,CAACwC,KAAK,CAAC,CAAC,CAAC,GAAGxC,KAAK;IAExD,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACkC,QAAQ,CAACI,GAAG,CAACG,MAAM,CAAC,EAAE;MAC/BH,GAAG,GAAGA,GAAG,CAACP,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAAU,KAAI;QAAA,OAAIA,KAAI,GAAGA,KAAI;MAAA,EAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACvD,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAACT,QAAQ,CAACI,GAAG,CAACG,MAAM,CAAC,EAAE;MACvChD,WAAW,KAAAiC,MAAA,CAAK1B,KAAK,kCAA+B,CAAC;IACvD;IAEA,IAAM4C,IAAG,GAAGC,QAAQ,CAACP,GAAG,EAAE,EAAE,CAAC;IAC7B,IAAIb,KAAK,CAACmB,IAAG,CAAC,IAAIA,IAAG,GAAG,CAAC,IAAIA,IAAG,GAAG,UAAU,EAAE;MAC7CnD,WAAW,KAAAiC,MAAA,CAAK1B,KAAK,kCAA+B,CAAC;IACvD;IAEA,OAAO8C,QAAQ,CAACR,GAAU,CAAC;EAC7B,CAAC,MAAM,IAAIS,OAAA,CAAO/C,KAAK,MAAK,QAAQ,EAAE;IACpC,IAAIL,GAAG,CAACK,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;MAC/B,OAAOA,KAAK;IACd,CAAC,MAAM,IAAIL,GAAG,CAACK,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;MACtC,OAAOsB,QAAQ,CAAC0B,QAAQ,CAAChD,KAAK,CAAC,CAAC;IAClC,CAAC,MAAM,IAAIL,GAAG,CAACK,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;MACtC,OAAOsB,QAAQ,CAACtB,KAAK,CAAC;IACxB;EACF;EAEA,MAAM,IAAIiD,SAAS,mBAAAvB,MAAA,CAAmB1B,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAIkD,MAAM,CAAClD,KAAK,CAAC,IAAKA,KAAK,CAASmD,WAAW,CAACC,IAAK,2EAAwE,CAAC;AAC3L;AAEA,OAAO,SAASC,QAAQA,CAAErD,KAAU,EAAE;EACpC,OAAO,CAACA,KAAK,CAACS,CAAC,IAAI,EAAE,KAAKT,KAAK,CAACU,CAAC,IAAI,CAAC,CAAC,GAAGV,KAAK,CAACW,CAAC;AACnD;AAEA,OAAO,SAAS2C,UAAUA,CACxBtD,KAAa,EACbuD,MAA8C,EAC9CC,YAA6B,EACrB;EACR,IAAAC,qBAAA,GAAmCzD,KAAK,CACrC0D,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC7B,KAAK,CAAC,GAAG,EAAE,CAAC,CAA2B;IAAA8B,sBAAA,GAAAC,cAAA,CAAAL,qBAAA;IADtEM,SAAS,GAAAF,sBAAA;IAAEG,aAAa,GAAAH,sBAAA;EAG/B,IAAII,QAAQ,GAAG,EAAE;EACjB,IAAIF,SAAS,IAAIA,SAAS,IAAIR,MAAM,EAAE;IACpC,IAAIS,aAAa,IAAIA,aAAa,IAAIT,MAAM,CAACQ,SAAS,CAAC,EAAE;MACvDE,QAAQ,GAAGV,MAAM,CAACQ,SAAS,CAAC,CAACC,aAAa,CAAC;IAC7C,CAAC,MAAM,IAAI,MAAM,IAAIT,MAAM,CAACQ,SAAS,CAAC,EAAE;MACtCE,QAAQ,GAAGV,MAAM,CAACQ,SAAS,CAAC,CAACG,IAAI;IACnC;EACF,CAAC,MAAM,IAAIH,SAAS,IAAIA,SAAS,IAAIP,YAAY,EAAE;IACjDS,QAAQ,GAAGT,YAAY,CAACO,SAAS,CAAW;EAC9C;EAEA,OAAOE,QAAQ;AACjB;;AAEA;AACA,OAAO,SAAS3C,QAAQA,CAAEC,IAAS,EAAO;EACxC,IAAQR,CAAC,GAAcQ,IAAI,CAAnBR,CAAC;IAAEC,CAAC,GAAWO,IAAI,CAAhBP,CAAC;IAAEK,CAAC,GAAQE,IAAI,CAAbF,CAAC;IAAET,CAAA,GAAMW,IAAI,CAAVX,CAAA;EACjB,IAAMuD,CAAC,GAAI,SAALA,CAACA,CAAIC,CAAS,EAAK;IACvB,IAAMC,CAAC,GAAG,CAACD,CAAC,GAAIrD,CAAC,GAAG,EAAG,IAAI,CAAC;IAC5B,OAAOM,CAAC,GAAGA,CAAC,GAAGL,CAAC,GAAGsD,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACH,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACvD,CAAC;EAED,IAAM7D,GAAG,GAAG,CAAC2D,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,GAAG,CAAC,UAAAX,CAAC;IAAA,OAAIiD,IAAI,CAACG,KAAK,CAACpD,CAAC,GAAG,GAAG,CAAC;EAAA,EAAC;EAE5D,OAAO;IAAEZ,CAAC,EAAED,GAAG,CAAC,CAAC,CAAC;IAAEE,CAAC,EAAEF,GAAG,CAAC,CAAC,CAAC;IAAEG,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC;IAAEI,CAAA,EAAAA;EAAE,CAAC;AAC/C;AAEA,OAAO,SAASM,QAAQA,CAAEC,IAAS,EAAO;EACxC,OAAOG,QAAQ,CAAC0B,QAAQ,CAAC7B,IAAI,CAAC,CAAC;AACjC;;AAEA;AACA,OAAO,SAASuD,QAAQA,CAAE7D,IAAS,EAAO;EACxC,IAAI,CAACA,IAAI,EAAE,OAAO;IAAEE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEK,CAAC,EAAE,CAAC;IAAET,CAAC,EAAE;EAAE,CAAC;EAE5C,IAAMH,CAAC,GAAGI,IAAI,CAACJ,CAAC,GAAG,GAAG;EACtB,IAAMC,CAAC,GAAGG,IAAI,CAACH,CAAC,GAAG,GAAG;EACtB,IAAMC,CAAC,GAAGE,IAAI,CAACF,CAAC,GAAG,GAAG;EACtB,IAAM4D,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC9D,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EAC7B,IAAM6D,GAAG,GAAGF,IAAI,CAACE,GAAG,CAAC/D,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EAE7B,IAAII,CAAC,GAAG,CAAC;EAET,IAAIwD,GAAG,KAAKC,GAAG,EAAE;IACf,IAAID,GAAG,KAAK9D,CAAC,EAAE;MACbM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAI,CAACL,CAAC,GAAGC,CAAC,KAAK4D,GAAG,GAAGC,GAAG,CAAE,CAAC;IACxC,CAAC,MAAM,IAAID,GAAG,KAAK7D,CAAC,EAAE;MACpBK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAI,CAACJ,CAAC,GAAGF,CAAC,KAAK8D,GAAG,GAAGC,GAAG,CAAE,CAAC;IACxC,CAAC,MAAM,IAAID,GAAG,KAAK5D,CAAC,EAAE;MACpBI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAI,CAACN,CAAC,GAAGC,CAAC,KAAK6D,GAAG,GAAGC,GAAG,CAAE,CAAC;IACxC;EACF;EAEA,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGA,CAAC,GAAG,GAAG;EAEtB,IAAMC,CAAC,GAAGuD,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAACA,GAAG,GAAGC,GAAG,IAAID,GAAG;EAC3C,IAAMnD,GAAG,GAAG,CAACL,CAAC,EAAEC,CAAC,EAAEuD,GAAG,CAAC;EAEvB,OAAO;IAAExD,CAAC,EAAEK,GAAG,CAAC,CAAC,CAAC;IAAEJ,CAAC,EAAEI,GAAG,CAAC,CAAC,CAAC;IAAEC,CAAC,EAAED,GAAG,CAAC,CAAC,CAAC;IAAER,CAAC,EAAEC,IAAI,CAACD;EAAE,CAAC;AACvD;AAEA,OAAO,SAAS+D,QAAQA,CAAEpD,IAAS,EAAO;EACxC,IAAQR,CAAC,GAAcQ,IAAI,CAAnBR,CAAC;IAAEC,CAAC,GAAWO,IAAI,CAAhBP,CAAC;IAAEK,CAAC,GAAQE,IAAI,CAAbF,CAAC;IAAET,CAAA,GAAMW,IAAI,CAAVX,CAAA;EAEjB,IAAMK,CAAC,GAAGI,CAAC,GAAIA,CAAC,GAAGL,CAAC,GAAG,CAAE;EAEzB,IAAM4D,MAAM,GAAG3D,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAACI,CAAC,GAAGJ,CAAC,IAAIqD,IAAI,CAACE,GAAG,CAACvD,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;EAEpE,OAAO;IAAEF,CAAC,EAADA,CAAC;IAAEC,CAAC,EAAE4D,MAAM;IAAE3D,CAAC,EAADA,CAAC;IAAEL,CAAA,EAAAA;EAAE,CAAC;AAC/B;AAEA,OAAO,SAASoC,QAAQA,CAAElC,GAAQ,EAAO;EACvC,IAAQC,CAAC,GAAcD,GAAG,CAAlBC,CAAC;IAAEC,CAAC,GAAWF,GAAG,CAAfE,CAAC;IAAEC,CAAC,GAAQH,GAAG,CAAZG,CAAC;IAAEL,CAAA,GAAME,GAAG,CAATF,CAAA;EAEjB,IAAMS,CAAC,GAAGJ,CAAC,GAAGD,CAAC,GAAGsD,IAAI,CAACE,GAAG,CAACvD,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;EAEpC,IAAM2D,MAAM,GAAGvD,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,GAAGJ,CAAC,GAAGI,CAAE;EAE5C,OAAO;IAAEN,CAAC,EAADA,CAAC;IAAEC,CAAC,EAAE4D,MAAM;IAAEvD,CAAC,EAADA,CAAC;IAAET,CAAA,EAAAA;EAAE,CAAC;AAC/B;AAEA,OAAO,SAASiE,QAAQA,CAAAC,IAAA,EAA+B;EAAA,IAA3BrE,CAAC,GAAgBqE,IAAA,CAAjBrE,CAAC;IAAEC,CAAC,GAAaoE,IAAA,CAAdpE,CAAC;IAAEC,CAAC,GAAUmE,IAAA,CAAXnE,CAAC;IAAEC,CAAA,GAAQkE,IAAA,CAARlE,CAAA;EACnC,OAAOA,CAAC,KAAKmE,SAAS,UAAArD,MAAA,CAAUjB,CAAC,QAAAiB,MAAA,CAAKhB,CAAC,QAAAgB,MAAA,CAAKf,CAAC,iBAAAe,MAAA,CAAcjB,CAAC,QAAAiB,MAAA,CAAKhB,CAAC,QAAAgB,MAAA,CAAKf,CAAC,QAAAe,MAAA,CAAKd,CAAC,MAAG;AACnF;AAEA,OAAO,SAASoE,QAAQA,CAAEzD,IAAS,EAAU;EAC3C,OAAOsD,QAAQ,CAACvD,QAAQ,CAACC,IAAI,CAAC,CAAC;AACjC;AAEA,SAAS0D,KAAKA,CAAE5D,CAAS,EAAE;EACzB,IAAMN,CAAC,GAAGuD,IAAI,CAACG,KAAK,CAACpD,CAAC,CAAC,CAACqC,QAAQ,CAAC,EAAE,CAAC;EACpC,OAAO,CAAC,IAAI,CAACwB,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGnE,CAAC,CAAC0B,MAAM,CAAC,GAAG1B,CAAC,EAAEoE,WAAW,CAAC,CAAC;AACzD;AAEA,OAAO,SAASC,QAAQA,CAAAC,KAAA,EAA4B;EAAA,IAAxB5E,CAAC,GAAgB4E,KAAA,CAAjB5E,CAAC;IAAEC,CAAC,GAAa2E,KAAA,CAAd3E,CAAC;IAAEC,CAAC,GAAU0E,KAAA,CAAX1E,CAAC;IAAEC,CAAA,GAAQyE,KAAA,CAARzE,CAAA;EACnC,WAAAc,MAAA,CAAW,CACTuD,KAAK,CAACxE,CAAC,CAAC,EACRwE,KAAK,CAACvE,CAAC,CAAC,EACRuE,KAAK,CAACtE,CAAC,CAAC,EACRC,CAAC,KAAKmE,SAAS,GAAGE,KAAK,CAACX,IAAI,CAACG,KAAK,CAAC7D,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAClD,CAAC+B,IAAI,CAAC,EAAE,CAAC;AACZ;AAEA,OAAO,SAASG,QAAQA,CAAER,GAAQ,EAAO;EACvCA,GAAG,GAAGgD,QAAQ,CAAChD,GAAG,CAAC;EACnB,IAAAiD,UAAA,GAAmB7F,KAAK,CAAC4C,GAAG,EAAE,CAAC,CAAC,CAACN,GAAG,CAAE,UAAAwD,CAAS;MAAA,OAAK3C,QAAQ,CAAC2C,CAAC,EAAE,EAAE,CAAC;IAAA,EAAC;IAAAC,WAAA,GAAA3B,cAAA,CAAAyB,UAAA;IAA/D9E,CAAC,GAAAgF,WAAA;IAAE/E,CAAC,GAAA+E,WAAA;IAAE9E,CAAC,GAAA8E,WAAA;IAAE7E,CAAC,GAAA6E,WAAA;EACf7E,CAAC,GAAGA,CAAC,KAAKmE,SAAS,GAAGnE,CAAC,GAAIA,CAAC,GAAG,GAAI;EAEnC,OAAO;IAAEH,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC,CAAA,EAAAA;EAAE,CAAC;AACvB;AAEA,OAAO,SAAS8E,QAAQA,CAAEpD,GAAQ,EAAO;EACvC,IAAM9B,GAAG,GAAGsC,QAAQ,CAACR,GAAG,CAAC;EACzB,OAAOoC,QAAQ,CAAClE,GAAG,CAAC;AACtB;AAEA,OAAO,SAASmF,QAAQA,CAAEpE,IAAS,EAAO;EACxC,OAAO6D,QAAQ,CAAC9D,QAAQ,CAACC,IAAI,CAAC,CAAC;AACjC;AAEA,OAAO,SAAS+D,QAAQA,CAAEhD,GAAW,EAAO;EAC1C,IAAIA,GAAG,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IACvBD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;EACpB;EAEAF,GAAG,GAAGA,GAAG,CAACsB,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;EAEvC,IAAItB,GAAG,CAACG,MAAM,KAAK,CAAC,IAAIH,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IACxCH,GAAG,GAAGA,GAAG,CAACP,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAA4D,CAAC;MAAA,OAAIA,CAAC,GAAGA,CAAC;IAAA,EAAC,CAACjD,IAAI,CAAC,EAAE,CAAC;EAC9C;EAEA,IAAIL,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IACpBH,GAAG,GAAG1C,MAAM,CAACA,MAAM,CAAC0C,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACtC;EAEA,OAAOA,GAAG;AACZ;AAEA,OAAO,SAASuD,aAAaA,CAC3BC,QAAgB,EAChBvC,MAA8C,EAC9CC,YAA6B,EAC7B;EACA,OAAOsC,QAAQ,CAAClC,OAAO,CAAC,oCAAoC,EAAE,UAAAgC,CAAC,EAAI;IACjE,OAAOtC,UAAU,CAACsC,CAAC,EAAErC,MAAM,EAAEC,YAAY,CAAC,IAAIoC,CAAC;EACjD,CAAC,CAAC,CAAChC,OAAO,CAAC,2BAA2B,EAAE,UAAAgC,CAAC,EAAI;IAC3C,OAAO,OAAO,GAAGG,MAAM,CAACzF,MAAM,CAACwC,QAAQ,CAACwC,QAAQ,CAACM,CAAC,CAAChC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAACpB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EACnG,CAAC,CAAC;AACJ;AAEA,OAAO,SAASqD,OAAOA,CAAEC,KAAU,EAAEC,MAAc,EAAO;EACxD,IAAMC,GAAG,GAAGtG,MAAM,CAACuG,OAAO,CAACtG,IAAI,CAACuG,KAAK,CAACJ,KAAK,CAAC,CAAC;EAC7CE,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGD,MAAM,GAAG,EAAE;EAE7B,OAAOpG,IAAI,CAACsG,OAAO,CAACvG,MAAM,CAACwG,KAAK,CAACF,GAAG,CAAC,CAAC;AACxC;AAEA,OAAO,SAASG,MAAMA,CAAEL,KAAU,EAAEC,MAAc,EAAO;EACvD,IAAMC,GAAG,GAAGtG,MAAM,CAACuG,OAAO,CAACtG,IAAI,CAACuG,KAAK,CAACJ,KAAK,CAAC,CAAC;EAC7CE,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGD,MAAM,GAAG,EAAE;EAE7B,OAAOpG,IAAI,CAACsG,OAAO,CAACvG,MAAM,CAACwG,KAAK,CAACF,GAAG,CAAC,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASI,OAAOA,CAAEvG,KAAY,EAAE;EACrC,IAAMQ,GAAG,GAAGgB,UAAU,CAACxB,KAAK,CAAC;EAE7B,OAAOF,IAAI,CAACuG,KAAK,CAAC7F,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASgG,WAAWA,CAAEC,KAAY,EAAEC,MAAa,EAAE;EACxD,IAAMC,EAAE,GAAGJ,OAAO,CAACE,KAAK,CAAC;EACzB,IAAMG,EAAE,GAAGL,OAAO,CAACG,MAAM,CAAC;EAE1B,IAAMG,KAAK,GAAGvC,IAAI,CAACC,GAAG,CAACoC,EAAE,EAAEC,EAAE,CAAC;EAC9B,IAAME,IAAI,GAAGxC,IAAI,CAACE,GAAG,CAACmC,EAAE,EAAEC,EAAE,CAAC;EAE7B,OAAO,CAACC,KAAK,GAAG,IAAI,KAAKC,IAAI,GAAG,IAAI,CAAC;AACvC;AAEA,OAAO,SAASC,aAAaA,CAAE/G,KAAY,EAAE;EAC3C,IAAMgH,aAAa,GAAG1C,IAAI,CAAC2C,GAAG,CAACzH,YAAY,CAACgC,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAACxB,KAAK,CAAC,CAAC,CAAC;EAC9E,IAAMkH,aAAa,GAAG5C,IAAI,CAAC2C,GAAG,CAACzH,YAAY,CAACgC,UAAU,CAAC,QAAQ,CAAC,EAAEA,UAAU,CAACxB,KAAK,CAAC,CAAC,CAAC;;EAErF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,OAAOkH,aAAa,GAAG5C,IAAI,CAACE,GAAG,CAACwC,aAAa,EAAE,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM;AACtE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}